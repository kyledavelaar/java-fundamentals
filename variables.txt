instance variables:
  - live on heap (objects also)
  - given default values if not provided, meaning can't be accessed outside the package

local variable
  - live on stack
  - variable inside a method
  - and primitives
  - must be initialized with a value (assigned a value) before used b/c they are not given default values by the Java engine
  - is on the stack but not the heap, (unless it is inside an object, b/c then it is a reference variable and objects are always on the heap)


BOOLEANS:
  - Booleans cannot be assigned a 0 or 1 (like in c++)
  - Also can't use numbers where booleans are required
    int x = 1;
    if (x) { }  // this will throw compiler error


scope
  - static variables live as long as their class lives
  - instance variables live as long as their object lives
  - local variables live as long as their method is on the stack
  - block variables (if, loops, etc) live as long as their block lasts

